function sockjsProvider(){function a(a,d,e){var f={};f._buffer=[],f.connect=function(g){g=g||{};var k=d.defer();return g.endpoint&&(b.config.endpoint=g.endpoint),f.baseSocket=new SockJS(b.config.endpoint),f.baseSocket.onopen=function(){e.info("Connected!"),f.queue&&f.queue.length&&f.queue.forEach(function(a){j(a)}),f.queue=[],k.resolve(f)},f.baseSocket.onmessage=function(b){var c=h(b);i(c.event,c.message),a.$apply()},f.baseSocket.onclose=function(){e.info("Disconnected!"),f.baseSocket=null,c||setTimeout(function(){f.connect()},2e3)},f.baseSocket.onerror=function(a){e.error(a),k.reject(a)},k.promise};var g=function(a,b){return JSON.stringify({event:a,message:b})},h=function(a){var b=JSON.parse(a.data);return{event:b.event,message:b.message}},i=function(a,b){f.listeners&&f.listeners[a]&&f.listeners[a].forEach(function(a){a(b)})},j=function(a){return f.queue||(f.queue=[]),f.baseSocket&&1===f.baseSocket.readyState?void f.baseSocket.send(a):f.queue.push(a)};return f.on=function(a,b){f.baseSocket||f.connect(),f.listeners||(f.listeners={}),f.listeners[a]||(f.listeners[a]=[]),-1==f.listeners[a].indexOf(b)&&f.listeners[a].push(b)},f.emit=function(a,b){f.baseSocket||f.connect();var c=g(a,b);j(c)},f.close=function(){f.baseSocket&&(c=!0,c&&f.baseSocket.close.apply(f.baseSocket,arguments))},f}var b=this,c=!1;this.config={},this.$get=["$rootScope","$q","$log","$interval",a],this.setEndpoint=function(a){return this.config.endpoint=a,this}}angular.module("sockjs",[]).provider("sockjs",sockjsProvider);
//# sourceMappingURL=angular-sockjs-provider.min.js.map